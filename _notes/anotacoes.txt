TODO_DEV: APRENDER A RESOLVER PROMISE E RESOLVER ESTA E IDADE NO Cliente.


======


Errors:

se console mostrar que falat is missing the following properties from type 'IActionType[]': length, pop, push, concat,..
causa: é porque falta a tipagem de Promessa.
solução: tipar como promessa.

solucao: "para erro de possivelmente não atribuivel a 1 tipo - afirme se tiver certeza que é atribuivel sim com o sinal de exclamação<!> no fim da expressao de valor que esta usando",
erro_mensagem : "is not assignable to the same property in base type",
traducao: "não é atribuível à mesma propriedade no tipo base",

solução: "nao tente reatribuir uma constante, transforme-a em lexica (let) para poder reatribui-la",
erro: "Erro ',' expected.ts(1005) || ';' expected.deno-ts(1005)"


---
Typescript:
para uma interface seguir um contrato, ela nao consegue implementar outra interface e sim extende-la com extends.

classes_TS:
prototype:
não use metodos assincronos dentro da classe factoryPrototype, porque esta dificil atribuir o resultado destes metodos promessa nos campos this da classe... precisa atribbuir uma promessa faça a atribuição em metodos fora da classe direto no campo do objeto a ser criado.

--- PROMESSAS
campo de classe nao deixa resolver promessa como valor inserindo await antes do this, então não tente atribuir promessa em campo this de classe, faça a atribuição em outro metodo separado pegando diretamente o objeto a ser criado.

---
Passes logicos : vem do request
1. vemDoRequest o artefato
2. do vemDoRequest -> vai pro meuMetodo que devolve o artefato que recebeu
3. do meuMetodo -> vai para o uso

---
valor_construido_dinamico_ou_fixo: o que se constroi o valor no bloco fica com o valor fixor, e essa mesma construção pode ser transportada para o param para receber o valor de forma dinamica.

semelhanca Construir ou Pedir via Params:
// -- VALOR_FIXO: CONSTRUCAO FIXA NO BLOCO :  modelo construindo:
setStatusOperational() {
    const status: UseStatusOperational = 'pendente'
    return status
  }
// -- VALOR_DINAMICO: CONSTRUCAO VIA PARAMS :  mesmo modelo modificado para pedir a construção por param:
setStatusOperational(status: UseStatusOperational = 'pendente') {
    return status
  }

---
Primitivos tipados como Promessa
aviso: The corresponding lower-case primitive should be used
Use `boolean` insteaddeno-lint(ban-types)
traducao: A primitiva minúscula correspondente deve ser usada
Use `boolean` em vez deno-lintc
explicacao: Nao precisa tipar como promessa um valor que será representação de primitivo em Ts DENO.

---
avisos: importante: sempre que avisar: (ban-types) : o dev estas forçando fazer algo que não é preciso ou permitido computacionalmente

